#ifndef _ALTERA_SOC_SYSTEM_H_
#define _ALTERA_SOC_SYSTEM_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'soc_system' in
 * file './soc_system.sopcinfo'.
 */

/*
 * This file contains macros for all modules with masters in the system and
 * all the devices connected to those masters.
 * Macro names have unique prefixes to prevent duplicate names.
 */

/*
 * Macros for module 'DMA_to_SDRAM', class 'altera_msgdma'.
 * The macros are prefixed with 'DMA_TO_SDRAM_'.
 * The prefix comes from the module name.
 */
#define DMA_TO_SDRAM_COMPONENT_TYPE altera_msgdma
#define DMA_TO_SDRAM_COMPONENT_NAME DMA_to_SDRAM
#define DMA_TO_SDRAM_BURST_ENABLE 1
#define DMA_TO_SDRAM_BURST_WRAPPING_SUPPORT 1
#define DMA_TO_SDRAM_CHANNEL_ENABLE 0
#define DMA_TO_SDRAM_CHANNEL_ENABLE_DERIVED 0
#define DMA_TO_SDRAM_CHANNEL_WIDTH 8
#define DMA_TO_SDRAM_DATA_FIFO_DEPTH 2048
#define DMA_TO_SDRAM_DATA_WIDTH 256
#define DMA_TO_SDRAM_DESCRIPTOR_FIFO_DEPTH 32
#define DMA_TO_SDRAM_DMA_MODE 2
#define DMA_TO_SDRAM_ENHANCED_FEATURES 0
#define DMA_TO_SDRAM_ERROR_ENABLE 0
#define DMA_TO_SDRAM_ERROR_ENABLE_DERIVED 0
#define DMA_TO_SDRAM_ERROR_WIDTH 8
#define DMA_TO_SDRAM_MAX_BURST_COUNT 8
#define DMA_TO_SDRAM_MAX_BYTE 65536
#define DMA_TO_SDRAM_MAX_STRIDE 1
#define DMA_TO_SDRAM_PACKET_ENABLE 0
#define DMA_TO_SDRAM_PACKET_ENABLE_DERIVED 0
#define DMA_TO_SDRAM_PREFETCHER_ENABLE 0
#define DMA_TO_SDRAM_PROGRAMMABLE_BURST_ENABLE 0
#define DMA_TO_SDRAM_RESPONSE_PORT 2
#define DMA_TO_SDRAM_STRIDE_ENABLE 0
#define DMA_TO_SDRAM_STRIDE_ENABLE_DERIVED 0
#define DMA_TO_SDRAM_TRANSFER_TYPE Full Word Accesses Only

/*
 * Macros for device 'hps_0_bridges', class 'hps_bridge_avalon'
 * Path to the device is from the master group 'DMA_to_SDRAM'.
 * The macros are prefixed with 'DMA_TO_SDRAM_HPS_0_BRIDGES_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define DMA_TO_SDRAM_HPS_0_BRIDGES_COMPONENT_TYPE hps_bridge_avalon
#define DMA_TO_SDRAM_HPS_0_BRIDGES_COMPONENT_NAME hps_0_bridges
#define DMA_TO_SDRAM_HPS_0_BRIDGES_BASE 0x0
#define DMA_TO_SDRAM_HPS_0_BRIDGES_SPAN 0x0
#define DMA_TO_SDRAM_HPS_0_BRIDGES_END 0xffffffff

/*
 * Macros for device 'DMA_to_SDRAM_csr', class 'altera_msgdma'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_DMA_TO_SDRAM_CSR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_DMA_TO_SDRAM_CSR_COMPONENT_TYPE altera_msgdma
#define HPS_0_DMA_TO_SDRAM_CSR_COMPONENT_NAME DMA_to_SDRAM
#define HPS_0_DMA_TO_SDRAM_CSR_BASE 0x40
#define HPS_0_DMA_TO_SDRAM_CSR_SPAN 32
#define HPS_0_DMA_TO_SDRAM_CSR_END 0x5f
#define HPS_0_DMA_TO_SDRAM_CSR_IRQ 1
#define HPS_0_DMA_TO_SDRAM_CSR_BURST_ENABLE 1
#define HPS_0_DMA_TO_SDRAM_CSR_BURST_WRAPPING_SUPPORT 1
#define HPS_0_DMA_TO_SDRAM_CSR_CHANNEL_ENABLE 0
#define HPS_0_DMA_TO_SDRAM_CSR_CHANNEL_ENABLE_DERIVED 0
#define HPS_0_DMA_TO_SDRAM_CSR_CHANNEL_WIDTH 8
#define HPS_0_DMA_TO_SDRAM_CSR_DATA_FIFO_DEPTH 2048
#define HPS_0_DMA_TO_SDRAM_CSR_DATA_WIDTH 256
#define HPS_0_DMA_TO_SDRAM_CSR_DESCRIPTOR_FIFO_DEPTH 32
#define HPS_0_DMA_TO_SDRAM_CSR_DMA_MODE 2
#define HPS_0_DMA_TO_SDRAM_CSR_ENHANCED_FEATURES 0
#define HPS_0_DMA_TO_SDRAM_CSR_ERROR_ENABLE 0
#define HPS_0_DMA_TO_SDRAM_CSR_ERROR_ENABLE_DERIVED 0
#define HPS_0_DMA_TO_SDRAM_CSR_ERROR_WIDTH 8
#define HPS_0_DMA_TO_SDRAM_CSR_MAX_BURST_COUNT 8
#define HPS_0_DMA_TO_SDRAM_CSR_MAX_BYTE 65536
#define HPS_0_DMA_TO_SDRAM_CSR_MAX_STRIDE 1
#define HPS_0_DMA_TO_SDRAM_CSR_PACKET_ENABLE 0
#define HPS_0_DMA_TO_SDRAM_CSR_PACKET_ENABLE_DERIVED 0
#define HPS_0_DMA_TO_SDRAM_CSR_PREFETCHER_ENABLE 0
#define HPS_0_DMA_TO_SDRAM_CSR_PROGRAMMABLE_BURST_ENABLE 0
#define HPS_0_DMA_TO_SDRAM_CSR_RESPONSE_PORT 2
#define HPS_0_DMA_TO_SDRAM_CSR_STRIDE_ENABLE 0
#define HPS_0_DMA_TO_SDRAM_CSR_STRIDE_ENABLE_DERIVED 0
#define HPS_0_DMA_TO_SDRAM_CSR_TRANSFER_TYPE Full Word Accesses Only

/*
 * Macros for device 'DMA_to_SDRAM_descriptor_slave', class 'altera_msgdma'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_COMPONENT_TYPE altera_msgdma
#define HPS_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_COMPONENT_NAME DMA_to_SDRAM
#define HPS_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_BASE 0x60
#define HPS_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_SPAN 16
#define HPS_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_END 0x6f
#define HPS_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_BURST_ENABLE 1
#define HPS_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_BURST_WRAPPING_SUPPORT 1
#define HPS_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_CHANNEL_ENABLE 0
#define HPS_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_CHANNEL_ENABLE_DERIVED 0
#define HPS_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_CHANNEL_WIDTH 8
#define HPS_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_DATA_FIFO_DEPTH 2048
#define HPS_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_DATA_WIDTH 256
#define HPS_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_DESCRIPTOR_FIFO_DEPTH 32
#define HPS_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_DMA_MODE 2
#define HPS_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_ENHANCED_FEATURES 0
#define HPS_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_ERROR_ENABLE 0
#define HPS_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_ERROR_ENABLE_DERIVED 0
#define HPS_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_ERROR_WIDTH 8
#define HPS_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_MAX_BURST_COUNT 8
#define HPS_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_MAX_BYTE 65536
#define HPS_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_MAX_STRIDE 1
#define HPS_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_PACKET_ENABLE 0
#define HPS_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_PACKET_ENABLE_DERIVED 0
#define HPS_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_PREFETCHER_ENABLE 0
#define HPS_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_PROGRAMMABLE_BURST_ENABLE 0
#define HPS_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_RESPONSE_PORT 2
#define HPS_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_STRIDE_ENABLE 0
#define HPS_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_STRIDE_ENABLE_DERIVED 0
#define HPS_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_TRANSFER_TYPE Full Word Accesses Only

/*
 * Macros for device 'theta_pll_reconfig', class 'altera_pll_reconfig'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_THETA_PLL_RECONFIG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_THETA_PLL_RECONFIG_COMPONENT_TYPE altera_pll_reconfig
#define HPS_0_THETA_PLL_RECONFIG_COMPONENT_NAME theta_pll_reconfig
#define HPS_0_THETA_PLL_RECONFIG_BASE 0x1000100
#define HPS_0_THETA_PLL_RECONFIG_SPAN 256
#define HPS_0_THETA_PLL_RECONFIG_END 0x10001ff

/*
 * Macros for device 'theta_pll_reset_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_THETA_PLL_RESET_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_THETA_PLL_RESET_PIO_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_THETA_PLL_RESET_PIO_COMPONENT_NAME theta_pll_reset_pio
#define HPS_0_THETA_PLL_RESET_PIO_BASE 0x1000200
#define HPS_0_THETA_PLL_RESET_PIO_SPAN 16
#define HPS_0_THETA_PLL_RESET_PIO_END 0x100020f
#define HPS_0_THETA_PLL_RESET_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_THETA_PLL_RESET_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_THETA_PLL_RESET_PIO_CAPTURE 0
#define HPS_0_THETA_PLL_RESET_PIO_DATA_WIDTH 32
#define HPS_0_THETA_PLL_RESET_PIO_DO_TEST_BENCH_WIRING 0
#define HPS_0_THETA_PLL_RESET_PIO_DRIVEN_SIM_VALUE 0
#define HPS_0_THETA_PLL_RESET_PIO_EDGE_TYPE NONE
#define HPS_0_THETA_PLL_RESET_PIO_FREQ 100000000
#define HPS_0_THETA_PLL_RESET_PIO_HAS_IN 0
#define HPS_0_THETA_PLL_RESET_PIO_HAS_OUT 1
#define HPS_0_THETA_PLL_RESET_PIO_HAS_TRI 0
#define HPS_0_THETA_PLL_RESET_PIO_IRQ_TYPE NONE
#define HPS_0_THETA_PLL_RESET_PIO_RESET_VALUE 0

/*
 * Macros for device 'theta_locked', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_THETA_LOCKED_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_THETA_LOCKED_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_THETA_LOCKED_COMPONENT_NAME theta_locked
#define HPS_0_THETA_LOCKED_BASE 0x1000300
#define HPS_0_THETA_LOCKED_SPAN 16
#define HPS_0_THETA_LOCKED_END 0x100030f
#define HPS_0_THETA_LOCKED_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_THETA_LOCKED_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_THETA_LOCKED_CAPTURE 0
#define HPS_0_THETA_LOCKED_DATA_WIDTH 32
#define HPS_0_THETA_LOCKED_DO_TEST_BENCH_WIRING 0
#define HPS_0_THETA_LOCKED_DRIVEN_SIM_VALUE 0
#define HPS_0_THETA_LOCKED_EDGE_TYPE NONE
#define HPS_0_THETA_LOCKED_FREQ 100000000
#define HPS_0_THETA_LOCKED_HAS_IN 1
#define HPS_0_THETA_LOCKED_HAS_OUT 0
#define HPS_0_THETA_LOCKED_HAS_TRI 0
#define HPS_0_THETA_LOCKED_IRQ_TYPE NONE
#define HPS_0_THETA_LOCKED_RESET_VALUE 0

/*
 * Macros for device 'phi_pll_reconfig', class 'altera_pll_reconfig'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_PHI_PLL_RECONFIG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_PHI_PLL_RECONFIG_COMPONENT_TYPE altera_pll_reconfig
#define HPS_0_PHI_PLL_RECONFIG_COMPONENT_NAME phi_pll_reconfig
#define HPS_0_PHI_PLL_RECONFIG_BASE 0x1000400
#define HPS_0_PHI_PLL_RECONFIG_SPAN 256
#define HPS_0_PHI_PLL_RECONFIG_END 0x10004ff

/*
 * Macros for device 'phi_pll_reset_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_PHI_PLL_RESET_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_PHI_PLL_RESET_PIO_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_PHI_PLL_RESET_PIO_COMPONENT_NAME phi_pll_reset_pio
#define HPS_0_PHI_PLL_RESET_PIO_BASE 0x1000500
#define HPS_0_PHI_PLL_RESET_PIO_SPAN 16
#define HPS_0_PHI_PLL_RESET_PIO_END 0x100050f
#define HPS_0_PHI_PLL_RESET_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_PHI_PLL_RESET_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_PHI_PLL_RESET_PIO_CAPTURE 0
#define HPS_0_PHI_PLL_RESET_PIO_DATA_WIDTH 32
#define HPS_0_PHI_PLL_RESET_PIO_DO_TEST_BENCH_WIRING 0
#define HPS_0_PHI_PLL_RESET_PIO_DRIVEN_SIM_VALUE 0
#define HPS_0_PHI_PLL_RESET_PIO_EDGE_TYPE NONE
#define HPS_0_PHI_PLL_RESET_PIO_FREQ 100000000
#define HPS_0_PHI_PLL_RESET_PIO_HAS_IN 0
#define HPS_0_PHI_PLL_RESET_PIO_HAS_OUT 1
#define HPS_0_PHI_PLL_RESET_PIO_HAS_TRI 0
#define HPS_0_PHI_PLL_RESET_PIO_IRQ_TYPE NONE
#define HPS_0_PHI_PLL_RESET_PIO_RESET_VALUE 0

/*
 * Macros for device 'phi_locked', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_PHI_LOCKED_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_PHI_LOCKED_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_PHI_LOCKED_COMPONENT_NAME phi_locked
#define HPS_0_PHI_LOCKED_BASE 0x1000600
#define HPS_0_PHI_LOCKED_SPAN 16
#define HPS_0_PHI_LOCKED_END 0x100060f
#define HPS_0_PHI_LOCKED_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_PHI_LOCKED_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_PHI_LOCKED_CAPTURE 0
#define HPS_0_PHI_LOCKED_DATA_WIDTH 32
#define HPS_0_PHI_LOCKED_DO_TEST_BENCH_WIRING 0
#define HPS_0_PHI_LOCKED_DRIVEN_SIM_VALUE 0
#define HPS_0_PHI_LOCKED_EDGE_TYPE NONE
#define HPS_0_PHI_LOCKED_FREQ 100000000
#define HPS_0_PHI_LOCKED_HAS_IN 1
#define HPS_0_PHI_LOCKED_HAS_OUT 0
#define HPS_0_PHI_LOCKED_HAS_TRI 0
#define HPS_0_PHI_LOCKED_IRQ_TYPE NONE
#define HPS_0_PHI_LOCKED_RESET_VALUE 0

/*
 * Macros for device 'tdc_reset_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_TDC_RESET_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_TDC_RESET_PIO_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_TDC_RESET_PIO_COMPONENT_NAME tdc_reset_pio
#define HPS_0_TDC_RESET_PIO_BASE 0x1000800
#define HPS_0_TDC_RESET_PIO_SPAN 16
#define HPS_0_TDC_RESET_PIO_END 0x100080f
#define HPS_0_TDC_RESET_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_TDC_RESET_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_TDC_RESET_PIO_CAPTURE 0
#define HPS_0_TDC_RESET_PIO_DATA_WIDTH 32
#define HPS_0_TDC_RESET_PIO_DO_TEST_BENCH_WIRING 0
#define HPS_0_TDC_RESET_PIO_DRIVEN_SIM_VALUE 0
#define HPS_0_TDC_RESET_PIO_EDGE_TYPE NONE
#define HPS_0_TDC_RESET_PIO_FREQ 100000000
#define HPS_0_TDC_RESET_PIO_HAS_IN 0
#define HPS_0_TDC_RESET_PIO_HAS_OUT 1
#define HPS_0_TDC_RESET_PIO_HAS_TRI 0
#define HPS_0_TDC_RESET_PIO_IRQ_TYPE NONE
#define HPS_0_TDC_RESET_PIO_RESET_VALUE 0

/*
 * Macros for device 'ip_sync', class 'ip_sync'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_IP_SYNC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_IP_SYNC_COMPONENT_TYPE ip_sync
#define HPS_0_IP_SYNC_COMPONENT_NAME ip_sync
#define HPS_0_IP_SYNC_BASE 0x1000c00
#define HPS_0_IP_SYNC_SPAN 1024
#define HPS_0_IP_SYNC_END 0x1000fff

/*
 * Macros for device 'pulsegenerator', class 'pulse_generator'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_PULSEGENERATOR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_PULSEGENERATOR_COMPONENT_TYPE pulse_generator
#define HPS_0_PULSEGENERATOR_COMPONENT_NAME pulsegenerator
#define HPS_0_PULSEGENERATOR_BASE 0x1001000
#define HPS_0_PULSEGENERATOR_SPAN 16
#define HPS_0_PULSEGENERATOR_END 0x100100f

/*
 * Macros for device 'aes_reset_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0'.
 * The macros are prefixed with 'HPS_0_AES_RESET_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_AES_RESET_PIO_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_AES_RESET_PIO_COMPONENT_NAME aes_reset_pio
#define HPS_0_AES_RESET_PIO_BASE 0x1002000
#define HPS_0_AES_RESET_PIO_SPAN 16
#define HPS_0_AES_RESET_PIO_END 0x100200f
#define HPS_0_AES_RESET_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_AES_RESET_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_AES_RESET_PIO_CAPTURE 0
#define HPS_0_AES_RESET_PIO_DATA_WIDTH 32
#define HPS_0_AES_RESET_PIO_DO_TEST_BENCH_WIRING 0
#define HPS_0_AES_RESET_PIO_DRIVEN_SIM_VALUE 0
#define HPS_0_AES_RESET_PIO_EDGE_TYPE NONE
#define HPS_0_AES_RESET_PIO_FREQ 100000000
#define HPS_0_AES_RESET_PIO_HAS_IN 0
#define HPS_0_AES_RESET_PIO_HAS_OUT 1
#define HPS_0_AES_RESET_PIO_HAS_TRI 0
#define HPS_0_AES_RESET_PIO_IRQ_TYPE NONE
#define HPS_0_AES_RESET_PIO_RESET_VALUE 0

/*
 * Macros for device 'DMA_to_SDRAM_csr', class 'altera_msgdma'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_DMA_TO_SDRAM_CSR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_DMA_TO_SDRAM_CSR_COMPONENT_TYPE altera_msgdma
#define HPS_0_BRIDGES_DMA_TO_SDRAM_CSR_COMPONENT_NAME DMA_to_SDRAM
#define HPS_0_BRIDGES_DMA_TO_SDRAM_CSR_BASE 0x40
#define HPS_0_BRIDGES_DMA_TO_SDRAM_CSR_SPAN 32
#define HPS_0_BRIDGES_DMA_TO_SDRAM_CSR_END 0x5f
#define HPS_0_BRIDGES_DMA_TO_SDRAM_CSR_BURST_ENABLE 1
#define HPS_0_BRIDGES_DMA_TO_SDRAM_CSR_BURST_WRAPPING_SUPPORT 1
#define HPS_0_BRIDGES_DMA_TO_SDRAM_CSR_CHANNEL_ENABLE 0
#define HPS_0_BRIDGES_DMA_TO_SDRAM_CSR_CHANNEL_ENABLE_DERIVED 0
#define HPS_0_BRIDGES_DMA_TO_SDRAM_CSR_CHANNEL_WIDTH 8
#define HPS_0_BRIDGES_DMA_TO_SDRAM_CSR_DATA_FIFO_DEPTH 2048
#define HPS_0_BRIDGES_DMA_TO_SDRAM_CSR_DATA_WIDTH 256
#define HPS_0_BRIDGES_DMA_TO_SDRAM_CSR_DESCRIPTOR_FIFO_DEPTH 32
#define HPS_0_BRIDGES_DMA_TO_SDRAM_CSR_DMA_MODE 2
#define HPS_0_BRIDGES_DMA_TO_SDRAM_CSR_ENHANCED_FEATURES 0
#define HPS_0_BRIDGES_DMA_TO_SDRAM_CSR_ERROR_ENABLE 0
#define HPS_0_BRIDGES_DMA_TO_SDRAM_CSR_ERROR_ENABLE_DERIVED 0
#define HPS_0_BRIDGES_DMA_TO_SDRAM_CSR_ERROR_WIDTH 8
#define HPS_0_BRIDGES_DMA_TO_SDRAM_CSR_MAX_BURST_COUNT 8
#define HPS_0_BRIDGES_DMA_TO_SDRAM_CSR_MAX_BYTE 65536
#define HPS_0_BRIDGES_DMA_TO_SDRAM_CSR_MAX_STRIDE 1
#define HPS_0_BRIDGES_DMA_TO_SDRAM_CSR_PACKET_ENABLE 0
#define HPS_0_BRIDGES_DMA_TO_SDRAM_CSR_PACKET_ENABLE_DERIVED 0
#define HPS_0_BRIDGES_DMA_TO_SDRAM_CSR_PREFETCHER_ENABLE 0
#define HPS_0_BRIDGES_DMA_TO_SDRAM_CSR_PROGRAMMABLE_BURST_ENABLE 0
#define HPS_0_BRIDGES_DMA_TO_SDRAM_CSR_RESPONSE_PORT 2
#define HPS_0_BRIDGES_DMA_TO_SDRAM_CSR_STRIDE_ENABLE 0
#define HPS_0_BRIDGES_DMA_TO_SDRAM_CSR_STRIDE_ENABLE_DERIVED 0
#define HPS_0_BRIDGES_DMA_TO_SDRAM_CSR_TRANSFER_TYPE Full Word Accesses Only

/*
 * Macros for device 'DMA_to_SDRAM_descriptor_slave', class 'altera_msgdma'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_COMPONENT_TYPE altera_msgdma
#define HPS_0_BRIDGES_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_COMPONENT_NAME DMA_to_SDRAM
#define HPS_0_BRIDGES_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_BASE 0x60
#define HPS_0_BRIDGES_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_SPAN 16
#define HPS_0_BRIDGES_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_END 0x6f
#define HPS_0_BRIDGES_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_BURST_ENABLE 1
#define HPS_0_BRIDGES_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_BURST_WRAPPING_SUPPORT 1
#define HPS_0_BRIDGES_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_CHANNEL_ENABLE 0
#define HPS_0_BRIDGES_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_CHANNEL_ENABLE_DERIVED 0
#define HPS_0_BRIDGES_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_CHANNEL_WIDTH 8
#define HPS_0_BRIDGES_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_DATA_FIFO_DEPTH 2048
#define HPS_0_BRIDGES_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_DATA_WIDTH 256
#define HPS_0_BRIDGES_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_DESCRIPTOR_FIFO_DEPTH 32
#define HPS_0_BRIDGES_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_DMA_MODE 2
#define HPS_0_BRIDGES_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_ENHANCED_FEATURES 0
#define HPS_0_BRIDGES_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_ERROR_ENABLE 0
#define HPS_0_BRIDGES_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_ERROR_ENABLE_DERIVED 0
#define HPS_0_BRIDGES_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_ERROR_WIDTH 8
#define HPS_0_BRIDGES_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_MAX_BURST_COUNT 8
#define HPS_0_BRIDGES_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_MAX_BYTE 65536
#define HPS_0_BRIDGES_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_MAX_STRIDE 1
#define HPS_0_BRIDGES_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_PACKET_ENABLE 0
#define HPS_0_BRIDGES_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_PACKET_ENABLE_DERIVED 0
#define HPS_0_BRIDGES_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_PREFETCHER_ENABLE 0
#define HPS_0_BRIDGES_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_PROGRAMMABLE_BURST_ENABLE 0
#define HPS_0_BRIDGES_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_RESPONSE_PORT 2
#define HPS_0_BRIDGES_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_STRIDE_ENABLE 0
#define HPS_0_BRIDGES_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_STRIDE_ENABLE_DERIVED 0
#define HPS_0_BRIDGES_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_TRANSFER_TYPE Full Word Accesses Only

/*
 * Macros for device 'theta_pll_reconfig', class 'altera_pll_reconfig'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_THETA_PLL_RECONFIG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_THETA_PLL_RECONFIG_COMPONENT_TYPE altera_pll_reconfig
#define HPS_0_BRIDGES_THETA_PLL_RECONFIG_COMPONENT_NAME theta_pll_reconfig
#define HPS_0_BRIDGES_THETA_PLL_RECONFIG_BASE 0x1000100
#define HPS_0_BRIDGES_THETA_PLL_RECONFIG_SPAN 256
#define HPS_0_BRIDGES_THETA_PLL_RECONFIG_END 0x10001ff

/*
 * Macros for device 'theta_pll_reset_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_THETA_PLL_RESET_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_THETA_PLL_RESET_PIO_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_THETA_PLL_RESET_PIO_COMPONENT_NAME theta_pll_reset_pio
#define HPS_0_BRIDGES_THETA_PLL_RESET_PIO_BASE 0x1000200
#define HPS_0_BRIDGES_THETA_PLL_RESET_PIO_SPAN 16
#define HPS_0_BRIDGES_THETA_PLL_RESET_PIO_END 0x100020f
#define HPS_0_BRIDGES_THETA_PLL_RESET_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_THETA_PLL_RESET_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_THETA_PLL_RESET_PIO_CAPTURE 0
#define HPS_0_BRIDGES_THETA_PLL_RESET_PIO_DATA_WIDTH 32
#define HPS_0_BRIDGES_THETA_PLL_RESET_PIO_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_THETA_PLL_RESET_PIO_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_THETA_PLL_RESET_PIO_EDGE_TYPE NONE
#define HPS_0_BRIDGES_THETA_PLL_RESET_PIO_FREQ 100000000
#define HPS_0_BRIDGES_THETA_PLL_RESET_PIO_HAS_IN 0
#define HPS_0_BRIDGES_THETA_PLL_RESET_PIO_HAS_OUT 1
#define HPS_0_BRIDGES_THETA_PLL_RESET_PIO_HAS_TRI 0
#define HPS_0_BRIDGES_THETA_PLL_RESET_PIO_IRQ_TYPE NONE
#define HPS_0_BRIDGES_THETA_PLL_RESET_PIO_RESET_VALUE 0

/*
 * Macros for device 'theta_locked', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_THETA_LOCKED_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_THETA_LOCKED_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_THETA_LOCKED_COMPONENT_NAME theta_locked
#define HPS_0_BRIDGES_THETA_LOCKED_BASE 0x1000300
#define HPS_0_BRIDGES_THETA_LOCKED_SPAN 16
#define HPS_0_BRIDGES_THETA_LOCKED_END 0x100030f
#define HPS_0_BRIDGES_THETA_LOCKED_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_THETA_LOCKED_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_THETA_LOCKED_CAPTURE 0
#define HPS_0_BRIDGES_THETA_LOCKED_DATA_WIDTH 32
#define HPS_0_BRIDGES_THETA_LOCKED_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_THETA_LOCKED_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_THETA_LOCKED_EDGE_TYPE NONE
#define HPS_0_BRIDGES_THETA_LOCKED_FREQ 100000000
#define HPS_0_BRIDGES_THETA_LOCKED_HAS_IN 1
#define HPS_0_BRIDGES_THETA_LOCKED_HAS_OUT 0
#define HPS_0_BRIDGES_THETA_LOCKED_HAS_TRI 0
#define HPS_0_BRIDGES_THETA_LOCKED_IRQ_TYPE NONE
#define HPS_0_BRIDGES_THETA_LOCKED_RESET_VALUE 0

/*
 * Macros for device 'phi_pll_reconfig', class 'altera_pll_reconfig'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_PHI_PLL_RECONFIG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_PHI_PLL_RECONFIG_COMPONENT_TYPE altera_pll_reconfig
#define HPS_0_BRIDGES_PHI_PLL_RECONFIG_COMPONENT_NAME phi_pll_reconfig
#define HPS_0_BRIDGES_PHI_PLL_RECONFIG_BASE 0x1000400
#define HPS_0_BRIDGES_PHI_PLL_RECONFIG_SPAN 256
#define HPS_0_BRIDGES_PHI_PLL_RECONFIG_END 0x10004ff

/*
 * Macros for device 'phi_pll_reset_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_PHI_PLL_RESET_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_PHI_PLL_RESET_PIO_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_PHI_PLL_RESET_PIO_COMPONENT_NAME phi_pll_reset_pio
#define HPS_0_BRIDGES_PHI_PLL_RESET_PIO_BASE 0x1000500
#define HPS_0_BRIDGES_PHI_PLL_RESET_PIO_SPAN 16
#define HPS_0_BRIDGES_PHI_PLL_RESET_PIO_END 0x100050f
#define HPS_0_BRIDGES_PHI_PLL_RESET_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_PHI_PLL_RESET_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_PHI_PLL_RESET_PIO_CAPTURE 0
#define HPS_0_BRIDGES_PHI_PLL_RESET_PIO_DATA_WIDTH 32
#define HPS_0_BRIDGES_PHI_PLL_RESET_PIO_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_PHI_PLL_RESET_PIO_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_PHI_PLL_RESET_PIO_EDGE_TYPE NONE
#define HPS_0_BRIDGES_PHI_PLL_RESET_PIO_FREQ 100000000
#define HPS_0_BRIDGES_PHI_PLL_RESET_PIO_HAS_IN 0
#define HPS_0_BRIDGES_PHI_PLL_RESET_PIO_HAS_OUT 1
#define HPS_0_BRIDGES_PHI_PLL_RESET_PIO_HAS_TRI 0
#define HPS_0_BRIDGES_PHI_PLL_RESET_PIO_IRQ_TYPE NONE
#define HPS_0_BRIDGES_PHI_PLL_RESET_PIO_RESET_VALUE 0

/*
 * Macros for device 'phi_locked', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_PHI_LOCKED_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_PHI_LOCKED_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_PHI_LOCKED_COMPONENT_NAME phi_locked
#define HPS_0_BRIDGES_PHI_LOCKED_BASE 0x1000600
#define HPS_0_BRIDGES_PHI_LOCKED_SPAN 16
#define HPS_0_BRIDGES_PHI_LOCKED_END 0x100060f
#define HPS_0_BRIDGES_PHI_LOCKED_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_PHI_LOCKED_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_PHI_LOCKED_CAPTURE 0
#define HPS_0_BRIDGES_PHI_LOCKED_DATA_WIDTH 32
#define HPS_0_BRIDGES_PHI_LOCKED_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_PHI_LOCKED_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_PHI_LOCKED_EDGE_TYPE NONE
#define HPS_0_BRIDGES_PHI_LOCKED_FREQ 100000000
#define HPS_0_BRIDGES_PHI_LOCKED_HAS_IN 1
#define HPS_0_BRIDGES_PHI_LOCKED_HAS_OUT 0
#define HPS_0_BRIDGES_PHI_LOCKED_HAS_TRI 0
#define HPS_0_BRIDGES_PHI_LOCKED_IRQ_TYPE NONE
#define HPS_0_BRIDGES_PHI_LOCKED_RESET_VALUE 0

/*
 * Macros for device 'tdc_reset_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_TDC_RESET_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_TDC_RESET_PIO_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_TDC_RESET_PIO_COMPONENT_NAME tdc_reset_pio
#define HPS_0_BRIDGES_TDC_RESET_PIO_BASE 0x1000800
#define HPS_0_BRIDGES_TDC_RESET_PIO_SPAN 16
#define HPS_0_BRIDGES_TDC_RESET_PIO_END 0x100080f
#define HPS_0_BRIDGES_TDC_RESET_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_TDC_RESET_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_TDC_RESET_PIO_CAPTURE 0
#define HPS_0_BRIDGES_TDC_RESET_PIO_DATA_WIDTH 32
#define HPS_0_BRIDGES_TDC_RESET_PIO_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_TDC_RESET_PIO_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_TDC_RESET_PIO_EDGE_TYPE NONE
#define HPS_0_BRIDGES_TDC_RESET_PIO_FREQ 100000000
#define HPS_0_BRIDGES_TDC_RESET_PIO_HAS_IN 0
#define HPS_0_BRIDGES_TDC_RESET_PIO_HAS_OUT 1
#define HPS_0_BRIDGES_TDC_RESET_PIO_HAS_TRI 0
#define HPS_0_BRIDGES_TDC_RESET_PIO_IRQ_TYPE NONE
#define HPS_0_BRIDGES_TDC_RESET_PIO_RESET_VALUE 0

/*
 * Macros for device 'ip_sync', class 'ip_sync'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_IP_SYNC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_IP_SYNC_COMPONENT_TYPE ip_sync
#define HPS_0_BRIDGES_IP_SYNC_COMPONENT_NAME ip_sync
#define HPS_0_BRIDGES_IP_SYNC_BASE 0x1000c00
#define HPS_0_BRIDGES_IP_SYNC_SPAN 1024
#define HPS_0_BRIDGES_IP_SYNC_END 0x1000fff

/*
 * Macros for device 'pulsegenerator', class 'pulse_generator'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_PULSEGENERATOR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_PULSEGENERATOR_COMPONENT_TYPE pulse_generator
#define HPS_0_BRIDGES_PULSEGENERATOR_COMPONENT_NAME pulsegenerator
#define HPS_0_BRIDGES_PULSEGENERATOR_BASE 0x1001000
#define HPS_0_BRIDGES_PULSEGENERATOR_SPAN 16
#define HPS_0_BRIDGES_PULSEGENERATOR_END 0x100100f

/*
 * Macros for device 'aes_reset_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_bridges'.
 * The macros are prefixed with 'HPS_0_BRIDGES_AES_RESET_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_BRIDGES_AES_RESET_PIO_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_BRIDGES_AES_RESET_PIO_COMPONENT_NAME aes_reset_pio
#define HPS_0_BRIDGES_AES_RESET_PIO_BASE 0x1002000
#define HPS_0_BRIDGES_AES_RESET_PIO_SPAN 16
#define HPS_0_BRIDGES_AES_RESET_PIO_END 0x100200f
#define HPS_0_BRIDGES_AES_RESET_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_BRIDGES_AES_RESET_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_BRIDGES_AES_RESET_PIO_CAPTURE 0
#define HPS_0_BRIDGES_AES_RESET_PIO_DATA_WIDTH 32
#define HPS_0_BRIDGES_AES_RESET_PIO_DO_TEST_BENCH_WIRING 0
#define HPS_0_BRIDGES_AES_RESET_PIO_DRIVEN_SIM_VALUE 0
#define HPS_0_BRIDGES_AES_RESET_PIO_EDGE_TYPE NONE
#define HPS_0_BRIDGES_AES_RESET_PIO_FREQ 100000000
#define HPS_0_BRIDGES_AES_RESET_PIO_HAS_IN 0
#define HPS_0_BRIDGES_AES_RESET_PIO_HAS_OUT 1
#define HPS_0_BRIDGES_AES_RESET_PIO_HAS_TRI 0
#define HPS_0_BRIDGES_AES_RESET_PIO_IRQ_TYPE NONE
#define HPS_0_BRIDGES_AES_RESET_PIO_RESET_VALUE 0

/*
 * Macros for device 'hps_0_axi_sdram', class 'axi_sdram'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_COMPONENT_TYPE axi_sdram
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_COMPONENT_NAME hps_0_axi_sdram
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_BASE 0x0
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_SPAN 0x80000000
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_END 0x7fffffff
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_SIZE_VALUE 1<<31
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_WRITABLE 1
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_ARM_A9_0_HPS_0_AXI_SDRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 31

/*
 * Macros for device 'theta_pll_reconfig', class 'altera_pll_reconfig'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_THETA_PLL_RECONFIG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_THETA_PLL_RECONFIG_COMPONENT_TYPE altera_pll_reconfig
#define HPS_0_ARM_A9_0_THETA_PLL_RECONFIG_COMPONENT_NAME theta_pll_reconfig
#define HPS_0_ARM_A9_0_THETA_PLL_RECONFIG_BASE 0xc1000100
#define HPS_0_ARM_A9_0_THETA_PLL_RECONFIG_SPAN 256
#define HPS_0_ARM_A9_0_THETA_PLL_RECONFIG_END 0xc10001ff

/*
 * Macros for device 'theta_pll_reset_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_THETA_PLL_RESET_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_THETA_PLL_RESET_PIO_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_THETA_PLL_RESET_PIO_COMPONENT_NAME theta_pll_reset_pio
#define HPS_0_ARM_A9_0_THETA_PLL_RESET_PIO_BASE 0xc1000200
#define HPS_0_ARM_A9_0_THETA_PLL_RESET_PIO_SPAN 16
#define HPS_0_ARM_A9_0_THETA_PLL_RESET_PIO_END 0xc100020f
#define HPS_0_ARM_A9_0_THETA_PLL_RESET_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_THETA_PLL_RESET_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_THETA_PLL_RESET_PIO_CAPTURE 0
#define HPS_0_ARM_A9_0_THETA_PLL_RESET_PIO_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_THETA_PLL_RESET_PIO_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_THETA_PLL_RESET_PIO_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_THETA_PLL_RESET_PIO_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_THETA_PLL_RESET_PIO_FREQ 100000000
#define HPS_0_ARM_A9_0_THETA_PLL_RESET_PIO_HAS_IN 0
#define HPS_0_ARM_A9_0_THETA_PLL_RESET_PIO_HAS_OUT 1
#define HPS_0_ARM_A9_0_THETA_PLL_RESET_PIO_HAS_TRI 0
#define HPS_0_ARM_A9_0_THETA_PLL_RESET_PIO_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_THETA_PLL_RESET_PIO_RESET_VALUE 0

/*
 * Macros for device 'theta_locked', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_THETA_LOCKED_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_THETA_LOCKED_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_THETA_LOCKED_COMPONENT_NAME theta_locked
#define HPS_0_ARM_A9_0_THETA_LOCKED_BASE 0xc1000300
#define HPS_0_ARM_A9_0_THETA_LOCKED_SPAN 16
#define HPS_0_ARM_A9_0_THETA_LOCKED_END 0xc100030f
#define HPS_0_ARM_A9_0_THETA_LOCKED_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_THETA_LOCKED_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_THETA_LOCKED_CAPTURE 0
#define HPS_0_ARM_A9_0_THETA_LOCKED_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_THETA_LOCKED_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_THETA_LOCKED_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_THETA_LOCKED_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_THETA_LOCKED_FREQ 100000000
#define HPS_0_ARM_A9_0_THETA_LOCKED_HAS_IN 1
#define HPS_0_ARM_A9_0_THETA_LOCKED_HAS_OUT 0
#define HPS_0_ARM_A9_0_THETA_LOCKED_HAS_TRI 0
#define HPS_0_ARM_A9_0_THETA_LOCKED_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_THETA_LOCKED_RESET_VALUE 0

/*
 * Macros for device 'phi_pll_reconfig', class 'altera_pll_reconfig'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_PHI_PLL_RECONFIG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_PHI_PLL_RECONFIG_COMPONENT_TYPE altera_pll_reconfig
#define HPS_0_ARM_A9_0_PHI_PLL_RECONFIG_COMPONENT_NAME phi_pll_reconfig
#define HPS_0_ARM_A9_0_PHI_PLL_RECONFIG_BASE 0xc1000400
#define HPS_0_ARM_A9_0_PHI_PLL_RECONFIG_SPAN 256
#define HPS_0_ARM_A9_0_PHI_PLL_RECONFIG_END 0xc10004ff

/*
 * Macros for device 'phi_pll_reset_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_PHI_PLL_RESET_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_PHI_PLL_RESET_PIO_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_PHI_PLL_RESET_PIO_COMPONENT_NAME phi_pll_reset_pio
#define HPS_0_ARM_A9_0_PHI_PLL_RESET_PIO_BASE 0xc1000500
#define HPS_0_ARM_A9_0_PHI_PLL_RESET_PIO_SPAN 16
#define HPS_0_ARM_A9_0_PHI_PLL_RESET_PIO_END 0xc100050f
#define HPS_0_ARM_A9_0_PHI_PLL_RESET_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_PHI_PLL_RESET_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_PHI_PLL_RESET_PIO_CAPTURE 0
#define HPS_0_ARM_A9_0_PHI_PLL_RESET_PIO_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_PHI_PLL_RESET_PIO_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_PHI_PLL_RESET_PIO_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_PHI_PLL_RESET_PIO_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_PHI_PLL_RESET_PIO_FREQ 100000000
#define HPS_0_ARM_A9_0_PHI_PLL_RESET_PIO_HAS_IN 0
#define HPS_0_ARM_A9_0_PHI_PLL_RESET_PIO_HAS_OUT 1
#define HPS_0_ARM_A9_0_PHI_PLL_RESET_PIO_HAS_TRI 0
#define HPS_0_ARM_A9_0_PHI_PLL_RESET_PIO_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_PHI_PLL_RESET_PIO_RESET_VALUE 0

/*
 * Macros for device 'phi_locked', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_PHI_LOCKED_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_PHI_LOCKED_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_PHI_LOCKED_COMPONENT_NAME phi_locked
#define HPS_0_ARM_A9_0_PHI_LOCKED_BASE 0xc1000600
#define HPS_0_ARM_A9_0_PHI_LOCKED_SPAN 16
#define HPS_0_ARM_A9_0_PHI_LOCKED_END 0xc100060f
#define HPS_0_ARM_A9_0_PHI_LOCKED_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_PHI_LOCKED_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_PHI_LOCKED_CAPTURE 0
#define HPS_0_ARM_A9_0_PHI_LOCKED_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_PHI_LOCKED_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_PHI_LOCKED_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_PHI_LOCKED_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_PHI_LOCKED_FREQ 100000000
#define HPS_0_ARM_A9_0_PHI_LOCKED_HAS_IN 1
#define HPS_0_ARM_A9_0_PHI_LOCKED_HAS_OUT 0
#define HPS_0_ARM_A9_0_PHI_LOCKED_HAS_TRI 0
#define HPS_0_ARM_A9_0_PHI_LOCKED_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_PHI_LOCKED_RESET_VALUE 0

/*
 * Macros for device 'tdc_reset_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_TDC_RESET_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_TDC_RESET_PIO_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_TDC_RESET_PIO_COMPONENT_NAME tdc_reset_pio
#define HPS_0_ARM_A9_0_TDC_RESET_PIO_BASE 0xc1000800
#define HPS_0_ARM_A9_0_TDC_RESET_PIO_SPAN 16
#define HPS_0_ARM_A9_0_TDC_RESET_PIO_END 0xc100080f
#define HPS_0_ARM_A9_0_TDC_RESET_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_TDC_RESET_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_TDC_RESET_PIO_CAPTURE 0
#define HPS_0_ARM_A9_0_TDC_RESET_PIO_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_TDC_RESET_PIO_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_TDC_RESET_PIO_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_TDC_RESET_PIO_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_TDC_RESET_PIO_FREQ 100000000
#define HPS_0_ARM_A9_0_TDC_RESET_PIO_HAS_IN 0
#define HPS_0_ARM_A9_0_TDC_RESET_PIO_HAS_OUT 1
#define HPS_0_ARM_A9_0_TDC_RESET_PIO_HAS_TRI 0
#define HPS_0_ARM_A9_0_TDC_RESET_PIO_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_TDC_RESET_PIO_RESET_VALUE 0

/*
 * Macros for device 'ip_sync', class 'ip_sync'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_IP_SYNC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_IP_SYNC_COMPONENT_TYPE ip_sync
#define HPS_0_ARM_A9_0_IP_SYNC_COMPONENT_NAME ip_sync
#define HPS_0_ARM_A9_0_IP_SYNC_BASE 0xc1000c00
#define HPS_0_ARM_A9_0_IP_SYNC_SPAN 1024
#define HPS_0_ARM_A9_0_IP_SYNC_END 0xc1000fff

/*
 * Macros for device 'pulsegenerator', class 'pulse_generator'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_PULSEGENERATOR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_PULSEGENERATOR_COMPONENT_TYPE pulse_generator
#define HPS_0_ARM_A9_0_PULSEGENERATOR_COMPONENT_NAME pulsegenerator
#define HPS_0_ARM_A9_0_PULSEGENERATOR_BASE 0xc1001000
#define HPS_0_ARM_A9_0_PULSEGENERATOR_SPAN 16
#define HPS_0_ARM_A9_0_PULSEGENERATOR_END 0xc100100f

/*
 * Macros for device 'aes_reset_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_AES_RESET_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_AES_RESET_PIO_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_0_AES_RESET_PIO_COMPONENT_NAME aes_reset_pio
#define HPS_0_ARM_A9_0_AES_RESET_PIO_BASE 0xc1002000
#define HPS_0_ARM_A9_0_AES_RESET_PIO_SPAN 16
#define HPS_0_ARM_A9_0_AES_RESET_PIO_END 0xc100200f
#define HPS_0_ARM_A9_0_AES_RESET_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_0_AES_RESET_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_0_AES_RESET_PIO_CAPTURE 0
#define HPS_0_ARM_A9_0_AES_RESET_PIO_DATA_WIDTH 32
#define HPS_0_ARM_A9_0_AES_RESET_PIO_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_0_AES_RESET_PIO_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_0_AES_RESET_PIO_EDGE_TYPE NONE
#define HPS_0_ARM_A9_0_AES_RESET_PIO_FREQ 100000000
#define HPS_0_ARM_A9_0_AES_RESET_PIO_HAS_IN 0
#define HPS_0_ARM_A9_0_AES_RESET_PIO_HAS_OUT 1
#define HPS_0_ARM_A9_0_AES_RESET_PIO_HAS_TRI 0
#define HPS_0_ARM_A9_0_AES_RESET_PIO_IRQ_TYPE NONE
#define HPS_0_ARM_A9_0_AES_RESET_PIO_RESET_VALUE 0

/*
 * Macros for device 'DMA_to_SDRAM_csr', class 'altera_msgdma'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_DMA_TO_SDRAM_CSR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_CSR_COMPONENT_TYPE altera_msgdma
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_CSR_COMPONENT_NAME DMA_to_SDRAM
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_CSR_BASE 0xff200040
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_CSR_SPAN 32
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_CSR_END 0xff20005f
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_CSR_BURST_ENABLE 1
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_CSR_BURST_WRAPPING_SUPPORT 1
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_CSR_CHANNEL_ENABLE 0
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_CSR_CHANNEL_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_CSR_CHANNEL_WIDTH 8
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_CSR_DATA_FIFO_DEPTH 2048
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_CSR_DATA_WIDTH 256
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_CSR_DESCRIPTOR_FIFO_DEPTH 32
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_CSR_DMA_MODE 2
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_CSR_ENHANCED_FEATURES 0
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_CSR_ERROR_ENABLE 0
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_CSR_ERROR_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_CSR_ERROR_WIDTH 8
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_CSR_MAX_BURST_COUNT 8
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_CSR_MAX_BYTE 65536
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_CSR_MAX_STRIDE 1
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_CSR_PACKET_ENABLE 0
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_CSR_PACKET_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_CSR_PREFETCHER_ENABLE 0
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_CSR_PROGRAMMABLE_BURST_ENABLE 0
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_CSR_RESPONSE_PORT 2
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_CSR_STRIDE_ENABLE 0
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_CSR_STRIDE_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_CSR_TRANSFER_TYPE Full Word Accesses Only

/*
 * Macros for device 'DMA_to_SDRAM_descriptor_slave', class 'altera_msgdma'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_COMPONENT_TYPE altera_msgdma
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_COMPONENT_NAME DMA_to_SDRAM
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_BASE 0xff200060
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_SPAN 16
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_END 0xff20006f
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_BURST_ENABLE 1
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_BURST_WRAPPING_SUPPORT 1
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_CHANNEL_ENABLE 0
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_CHANNEL_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_CHANNEL_WIDTH 8
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_DATA_FIFO_DEPTH 2048
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_DATA_WIDTH 256
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_DESCRIPTOR_FIFO_DEPTH 32
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_DMA_MODE 2
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_ENHANCED_FEATURES 0
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_ERROR_ENABLE 0
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_ERROR_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_ERROR_WIDTH 8
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_MAX_BURST_COUNT 8
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_MAX_BYTE 65536
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_MAX_STRIDE 1
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_PACKET_ENABLE 0
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_PACKET_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_PREFETCHER_ENABLE 0
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_PROGRAMMABLE_BURST_ENABLE 0
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_RESPONSE_PORT 2
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_STRIDE_ENABLE 0
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_STRIDE_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_0_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_TRANSFER_TYPE Full Word Accesses Only

/*
 * Macros for device 'hps_0_gmac0', class 'stmmac'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_GMAC0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_GMAC0_COMPONENT_TYPE stmmac
#define HPS_0_ARM_A9_0_HPS_0_GMAC0_COMPONENT_NAME hps_0_gmac0
#define HPS_0_ARM_A9_0_HPS_0_GMAC0_BASE 0xff700000
#define HPS_0_ARM_A9_0_HPS_0_GMAC0_SPAN 8192
#define HPS_0_ARM_A9_0_HPS_0_GMAC0_END 0xff701fff

/*
 * Macros for device 'hps_0_gmac1', class 'stmmac'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_GMAC1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_GMAC1_COMPONENT_TYPE stmmac
#define HPS_0_ARM_A9_0_HPS_0_GMAC1_COMPONENT_NAME hps_0_gmac1
#define HPS_0_ARM_A9_0_HPS_0_GMAC1_BASE 0xff702000
#define HPS_0_ARM_A9_0_HPS_0_GMAC1_SPAN 8192
#define HPS_0_ARM_A9_0_HPS_0_GMAC1_END 0xff703fff

/*
 * Macros for device 'hps_0_sdmmc', class 'sdmmc'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SDMMC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SDMMC_COMPONENT_TYPE sdmmc
#define HPS_0_ARM_A9_0_HPS_0_SDMMC_COMPONENT_NAME hps_0_sdmmc
#define HPS_0_ARM_A9_0_HPS_0_SDMMC_BASE 0xff704000
#define HPS_0_ARM_A9_0_HPS_0_SDMMC_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_SDMMC_END 0xff704fff

/*
 * Macros for device 'hps_0_qspi', class 'cadence_qspi'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_QSPI_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_QSPI_COMPONENT_TYPE cadence_qspi
#define HPS_0_ARM_A9_0_HPS_0_QSPI_COMPONENT_NAME hps_0_qspi
#define HPS_0_ARM_A9_0_HPS_0_QSPI_BASE 0xff705000
#define HPS_0_ARM_A9_0_HPS_0_QSPI_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_QSPI_END 0xff7050ff

/*
 * Macros for device 'hps_0_fpgamgr', class 'altera_fpgamgr'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_FPGAMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_FPGAMGR_COMPONENT_TYPE altera_fpgamgr
#define HPS_0_ARM_A9_0_HPS_0_FPGAMGR_COMPONENT_NAME hps_0_fpgamgr
#define HPS_0_ARM_A9_0_HPS_0_FPGAMGR_BASE 0xff706000
#define HPS_0_ARM_A9_0_HPS_0_FPGAMGR_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'hps_0_gpio0', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_GPIO0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_GPIO0_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_0_HPS_0_GPIO0_COMPONENT_NAME hps_0_gpio0
#define HPS_0_ARM_A9_0_HPS_0_GPIO0_BASE 0xff708000
#define HPS_0_ARM_A9_0_HPS_0_GPIO0_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_GPIO0_END 0xff7080ff

/*
 * Macros for device 'hps_0_gpio1', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_GPIO1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_GPIO1_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_0_HPS_0_GPIO1_COMPONENT_NAME hps_0_gpio1
#define HPS_0_ARM_A9_0_HPS_0_GPIO1_BASE 0xff709000
#define HPS_0_ARM_A9_0_HPS_0_GPIO1_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_GPIO1_END 0xff7090ff

/*
 * Macros for device 'hps_0_gpio2', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_GPIO2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_GPIO2_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_0_HPS_0_GPIO2_COMPONENT_NAME hps_0_gpio2
#define HPS_0_ARM_A9_0_HPS_0_GPIO2_BASE 0xff70a000
#define HPS_0_ARM_A9_0_HPS_0_GPIO2_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_GPIO2_END 0xff70a0ff

/*
 * Macros for device 'hps_0_l3regs', class 'altera_l3regs'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_L3REGS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_L3REGS_COMPONENT_TYPE altera_l3regs
#define HPS_0_ARM_A9_0_HPS_0_L3REGS_COMPONENT_NAME hps_0_l3regs
#define HPS_0_ARM_A9_0_HPS_0_L3REGS_BASE 0xff800000
#define HPS_0_ARM_A9_0_HPS_0_L3REGS_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_L3REGS_END 0xff800fff

/*
 * Macros for device 'hps_0_nand0', class 'denali_nand'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_NAND0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_NAND0_COMPONENT_TYPE denali_nand
#define HPS_0_ARM_A9_0_HPS_0_NAND0_COMPONENT_NAME hps_0_nand0
#define HPS_0_ARM_A9_0_HPS_0_NAND0_BASE 0xff900000
#define HPS_0_ARM_A9_0_HPS_0_NAND0_SPAN 65536
#define HPS_0_ARM_A9_0_HPS_0_NAND0_END 0xff90ffff

/*
 * Macros for device 'hps_0_usb0', class 'usb'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_USB0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_USB0_COMPONENT_TYPE usb
#define HPS_0_ARM_A9_0_HPS_0_USB0_COMPONENT_NAME hps_0_usb0
#define HPS_0_ARM_A9_0_HPS_0_USB0_BASE 0xffb00000
#define HPS_0_ARM_A9_0_HPS_0_USB0_SPAN 262144
#define HPS_0_ARM_A9_0_HPS_0_USB0_END 0xffb3ffff

/*
 * Macros for device 'hps_0_usb1', class 'usb'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_USB1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_USB1_COMPONENT_TYPE usb
#define HPS_0_ARM_A9_0_HPS_0_USB1_COMPONENT_NAME hps_0_usb1
#define HPS_0_ARM_A9_0_HPS_0_USB1_BASE 0xffb40000
#define HPS_0_ARM_A9_0_HPS_0_USB1_SPAN 262144
#define HPS_0_ARM_A9_0_HPS_0_USB1_END 0xffb7ffff

/*
 * Macros for device 'hps_0_dcan0', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_DCAN0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_DCAN0_COMPONENT_TYPE bosch_dcan
#define HPS_0_ARM_A9_0_HPS_0_DCAN0_COMPONENT_NAME hps_0_dcan0
#define HPS_0_ARM_A9_0_HPS_0_DCAN0_BASE 0xffc00000
#define HPS_0_ARM_A9_0_HPS_0_DCAN0_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_DCAN0_END 0xffc00fff

/*
 * Macros for device 'hps_0_dcan1', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_DCAN1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_DCAN1_COMPONENT_TYPE bosch_dcan
#define HPS_0_ARM_A9_0_HPS_0_DCAN1_COMPONENT_NAME hps_0_dcan1
#define HPS_0_ARM_A9_0_HPS_0_DCAN1_BASE 0xffc01000
#define HPS_0_ARM_A9_0_HPS_0_DCAN1_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_DCAN1_END 0xffc01fff

/*
 * Macros for device 'hps_0_uart0', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_UART0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_UART0_COMPONENT_TYPE snps_uart
#define HPS_0_ARM_A9_0_HPS_0_UART0_COMPONENT_NAME hps_0_uart0
#define HPS_0_ARM_A9_0_HPS_0_UART0_BASE 0xffc02000
#define HPS_0_ARM_A9_0_HPS_0_UART0_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_UART0_END 0xffc020ff
#define HPS_0_ARM_A9_0_HPS_0_UART0_FIFO_DEPTH 128
#define HPS_0_ARM_A9_0_HPS_0_UART0_FIFO_HWFC 0
#define HPS_0_ARM_A9_0_HPS_0_UART0_FIFO_MODE 1
#define HPS_0_ARM_A9_0_HPS_0_UART0_FIFO_SWFC 0
#define HPS_0_ARM_A9_0_HPS_0_UART0_FREQ 100000000

/*
 * Macros for device 'hps_0_uart1', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_UART1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_UART1_COMPONENT_TYPE snps_uart
#define HPS_0_ARM_A9_0_HPS_0_UART1_COMPONENT_NAME hps_0_uart1
#define HPS_0_ARM_A9_0_HPS_0_UART1_BASE 0xffc03000
#define HPS_0_ARM_A9_0_HPS_0_UART1_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_UART1_END 0xffc030ff
#define HPS_0_ARM_A9_0_HPS_0_UART1_FIFO_DEPTH 128
#define HPS_0_ARM_A9_0_HPS_0_UART1_FIFO_HWFC 0
#define HPS_0_ARM_A9_0_HPS_0_UART1_FIFO_MODE 1
#define HPS_0_ARM_A9_0_HPS_0_UART1_FIFO_SWFC 0
#define HPS_0_ARM_A9_0_HPS_0_UART1_FREQ 100000000

/*
 * Macros for device 'hps_0_i2c0', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_I2C0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_I2C0_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_0_HPS_0_I2C0_COMPONENT_NAME hps_0_i2c0
#define HPS_0_ARM_A9_0_HPS_0_I2C0_BASE 0xffc04000
#define HPS_0_ARM_A9_0_HPS_0_I2C0_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_I2C0_END 0xffc040ff

/*
 * Macros for device 'hps_0_i2c1', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_I2C1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_I2C1_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_0_HPS_0_I2C1_COMPONENT_NAME hps_0_i2c1
#define HPS_0_ARM_A9_0_HPS_0_I2C1_BASE 0xffc05000
#define HPS_0_ARM_A9_0_HPS_0_I2C1_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_I2C1_END 0xffc050ff

/*
 * Macros for device 'hps_0_i2c2', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_I2C2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_I2C2_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_0_HPS_0_I2C2_COMPONENT_NAME hps_0_i2c2
#define HPS_0_ARM_A9_0_HPS_0_I2C2_BASE 0xffc06000
#define HPS_0_ARM_A9_0_HPS_0_I2C2_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_I2C2_END 0xffc060ff

/*
 * Macros for device 'hps_0_i2c3', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_I2C3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_I2C3_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_0_HPS_0_I2C3_COMPONENT_NAME hps_0_i2c3
#define HPS_0_ARM_A9_0_HPS_0_I2C3_BASE 0xffc07000
#define HPS_0_ARM_A9_0_HPS_0_I2C3_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_I2C3_END 0xffc070ff

/*
 * Macros for device 'hps_0_timer0', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_TIMER0_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_ARM_A9_0_HPS_0_TIMER0_COMPONENT_NAME hps_0_timer0
#define HPS_0_ARM_A9_0_HPS_0_TIMER0_BASE 0xffc08000
#define HPS_0_ARM_A9_0_HPS_0_TIMER0_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_TIMER0_END 0xffc080ff

/*
 * Macros for device 'hps_0_timer1', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_TIMER1_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_ARM_A9_0_HPS_0_TIMER1_COMPONENT_NAME hps_0_timer1
#define HPS_0_ARM_A9_0_HPS_0_TIMER1_BASE 0xffc09000
#define HPS_0_ARM_A9_0_HPS_0_TIMER1_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_TIMER1_END 0xffc090ff

/*
 * Macros for device 'hps_0_sdrctl', class 'altera_sdrctl'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SDRCTL_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SDRCTL_COMPONENT_TYPE altera_sdrctl
#define HPS_0_ARM_A9_0_HPS_0_SDRCTL_COMPONENT_NAME hps_0_sdrctl
#define HPS_0_ARM_A9_0_HPS_0_SDRCTL_BASE 0xffc25000
#define HPS_0_ARM_A9_0_HPS_0_SDRCTL_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_SDRCTL_END 0xffc25fff

/*
 * Macros for device 'hps_0_timer2', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_TIMER2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_TIMER2_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_ARM_A9_0_HPS_0_TIMER2_COMPONENT_NAME hps_0_timer2
#define HPS_0_ARM_A9_0_HPS_0_TIMER2_BASE 0xffd00000
#define HPS_0_ARM_A9_0_HPS_0_TIMER2_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_TIMER2_END 0xffd000ff

/*
 * Macros for device 'hps_0_timer3', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_TIMER3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_TIMER3_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_ARM_A9_0_HPS_0_TIMER3_COMPONENT_NAME hps_0_timer3
#define HPS_0_ARM_A9_0_HPS_0_TIMER3_BASE 0xffd01000
#define HPS_0_ARM_A9_0_HPS_0_TIMER3_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_TIMER3_END 0xffd010ff

/*
 * Macros for device 'hps_0_wd_timer0', class 'dw_wd_timer'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_WD_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER0_COMPONENT_TYPE dw_wd_timer
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER0_COMPONENT_NAME hps_0_wd_timer0
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER0_BASE 0xffd02000
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER0_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER0_END 0xffd020ff

/*
 * Macros for device 'hps_0_wd_timer1', class 'dw_wd_timer'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_WD_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER1_COMPONENT_TYPE dw_wd_timer
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER1_COMPONENT_NAME hps_0_wd_timer1
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER1_BASE 0xffd03000
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER1_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_WD_TIMER1_END 0xffd030ff

/*
 * Macros for device 'hps_0_clkmgr', class 'asimov_clkmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_CLKMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_CLKMGR_COMPONENT_TYPE asimov_clkmgr
#define HPS_0_ARM_A9_0_HPS_0_CLKMGR_COMPONENT_NAME hps_0_clkmgr
#define HPS_0_ARM_A9_0_HPS_0_CLKMGR_BASE 0xffd04000
#define HPS_0_ARM_A9_0_HPS_0_CLKMGR_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'hps_0_rstmgr', class 'altera_rstmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_RSTMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_RSTMGR_COMPONENT_TYPE altera_rstmgr
#define HPS_0_ARM_A9_0_HPS_0_RSTMGR_COMPONENT_NAME hps_0_rstmgr
#define HPS_0_ARM_A9_0_HPS_0_RSTMGR_BASE 0xffd05000
#define HPS_0_ARM_A9_0_HPS_0_RSTMGR_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_RSTMGR_END 0xffd050ff

/*
 * Macros for device 'hps_0_sysmgr', class 'altera_sysmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SYSMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SYSMGR_COMPONENT_TYPE altera_sysmgr
#define HPS_0_ARM_A9_0_HPS_0_SYSMGR_COMPONENT_NAME hps_0_sysmgr
#define HPS_0_ARM_A9_0_HPS_0_SYSMGR_BASE 0xffd08000
#define HPS_0_ARM_A9_0_HPS_0_SYSMGR_SPAN 1024
#define HPS_0_ARM_A9_0_HPS_0_SYSMGR_END 0xffd083ff

/*
 * Macros for device 'hps_0_dma', class 'arm_pl330_dma'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_DMA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_DMA_COMPONENT_TYPE arm_pl330_dma
#define HPS_0_ARM_A9_0_HPS_0_DMA_COMPONENT_NAME hps_0_dma
#define HPS_0_ARM_A9_0_HPS_0_DMA_BASE 0xffe01000
#define HPS_0_ARM_A9_0_HPS_0_DMA_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_DMA_END 0xffe01fff

/*
 * Macros for device 'hps_0_spim0', class 'spi'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SPIM0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SPIM0_COMPONENT_TYPE spi
#define HPS_0_ARM_A9_0_HPS_0_SPIM0_COMPONENT_NAME hps_0_spim0
#define HPS_0_ARM_A9_0_HPS_0_SPIM0_BASE 0xfff00000
#define HPS_0_ARM_A9_0_HPS_0_SPIM0_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_SPIM0_END 0xfff000ff

/*
 * Macros for device 'hps_0_spim1', class 'spi'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SPIM1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SPIM1_COMPONENT_TYPE spi
#define HPS_0_ARM_A9_0_HPS_0_SPIM1_COMPONENT_NAME hps_0_spim1
#define HPS_0_ARM_A9_0_HPS_0_SPIM1_BASE 0xfff01000
#define HPS_0_ARM_A9_0_HPS_0_SPIM1_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_SPIM1_END 0xfff010ff

/*
 * Macros for device 'hps_0_scu', class 'scu'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_SCU_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_SCU_COMPONENT_TYPE scu
#define HPS_0_ARM_A9_0_HPS_0_SCU_COMPONENT_NAME hps_0_scu
#define HPS_0_ARM_A9_0_HPS_0_SCU_BASE 0xfffec000
#define HPS_0_ARM_A9_0_HPS_0_SCU_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_SCU_END 0xfffec0ff

/*
 * Macros for device 'hps_0_timer', class 'arm_internal_timer'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_TIMER_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_TIMER_COMPONENT_TYPE arm_internal_timer
#define HPS_0_ARM_A9_0_HPS_0_TIMER_COMPONENT_NAME hps_0_timer
#define HPS_0_ARM_A9_0_HPS_0_TIMER_BASE 0xfffec600
#define HPS_0_ARM_A9_0_HPS_0_TIMER_SPAN 256
#define HPS_0_ARM_A9_0_HPS_0_TIMER_END 0xfffec6ff

/*
 * Macros for device 'hps_0_arm_gic_0', class 'arm_gic'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_COMPONENT_NAME hps_0_arm_gic_0
#define HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_BASE 0xfffed000
#define HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'hps_0_L2', class 'arm_pl310_L2'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_L2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_L2_COMPONENT_TYPE arm_pl310_L2
#define HPS_0_ARM_A9_0_HPS_0_L2_COMPONENT_NAME hps_0_L2
#define HPS_0_ARM_A9_0_HPS_0_L2_BASE 0xfffef000
#define HPS_0_ARM_A9_0_HPS_0_L2_SPAN 4096
#define HPS_0_ARM_A9_0_HPS_0_L2_END 0xfffeffff

/*
 * Macros for device 'hps_0_axi_ocram', class 'axi_ocram'
 * Path to the device is from the master group 'hps_0_arm_a9_0'.
 * The macros are prefixed with 'HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_COMPONENT_NAME hps_0_axi_ocram
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_BASE 0xffff0000
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_SPAN 65536
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_END 0xffffffff
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_SIZE_VALUE 1<<16
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_WRITABLE 1
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_ARM_A9_0_HPS_0_AXI_OCRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16

/*
 * Macros for device 'hps_0_axi_sdram', class 'axi_sdram'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_COMPONENT_TYPE axi_sdram
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_COMPONENT_NAME hps_0_axi_sdram
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_BASE 0x0
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_SPAN 0x80000000
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_END 0x7fffffff
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_SIZE_VALUE 1<<31
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_WRITABLE 1
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_ARM_A9_1_HPS_0_AXI_SDRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 31

/*
 * Macros for device 'theta_pll_reconfig', class 'altera_pll_reconfig'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_THETA_PLL_RECONFIG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_THETA_PLL_RECONFIG_COMPONENT_TYPE altera_pll_reconfig
#define HPS_0_ARM_A9_1_THETA_PLL_RECONFIG_COMPONENT_NAME theta_pll_reconfig
#define HPS_0_ARM_A9_1_THETA_PLL_RECONFIG_BASE 0xc1000100
#define HPS_0_ARM_A9_1_THETA_PLL_RECONFIG_SPAN 256
#define HPS_0_ARM_A9_1_THETA_PLL_RECONFIG_END 0xc10001ff

/*
 * Macros for device 'theta_pll_reset_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_THETA_PLL_RESET_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_THETA_PLL_RESET_PIO_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_THETA_PLL_RESET_PIO_COMPONENT_NAME theta_pll_reset_pio
#define HPS_0_ARM_A9_1_THETA_PLL_RESET_PIO_BASE 0xc1000200
#define HPS_0_ARM_A9_1_THETA_PLL_RESET_PIO_SPAN 16
#define HPS_0_ARM_A9_1_THETA_PLL_RESET_PIO_END 0xc100020f
#define HPS_0_ARM_A9_1_THETA_PLL_RESET_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_THETA_PLL_RESET_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_THETA_PLL_RESET_PIO_CAPTURE 0
#define HPS_0_ARM_A9_1_THETA_PLL_RESET_PIO_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_THETA_PLL_RESET_PIO_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_THETA_PLL_RESET_PIO_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_THETA_PLL_RESET_PIO_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_THETA_PLL_RESET_PIO_FREQ 100000000
#define HPS_0_ARM_A9_1_THETA_PLL_RESET_PIO_HAS_IN 0
#define HPS_0_ARM_A9_1_THETA_PLL_RESET_PIO_HAS_OUT 1
#define HPS_0_ARM_A9_1_THETA_PLL_RESET_PIO_HAS_TRI 0
#define HPS_0_ARM_A9_1_THETA_PLL_RESET_PIO_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_THETA_PLL_RESET_PIO_RESET_VALUE 0

/*
 * Macros for device 'theta_locked', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_THETA_LOCKED_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_THETA_LOCKED_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_THETA_LOCKED_COMPONENT_NAME theta_locked
#define HPS_0_ARM_A9_1_THETA_LOCKED_BASE 0xc1000300
#define HPS_0_ARM_A9_1_THETA_LOCKED_SPAN 16
#define HPS_0_ARM_A9_1_THETA_LOCKED_END 0xc100030f
#define HPS_0_ARM_A9_1_THETA_LOCKED_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_THETA_LOCKED_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_THETA_LOCKED_CAPTURE 0
#define HPS_0_ARM_A9_1_THETA_LOCKED_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_THETA_LOCKED_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_THETA_LOCKED_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_THETA_LOCKED_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_THETA_LOCKED_FREQ 100000000
#define HPS_0_ARM_A9_1_THETA_LOCKED_HAS_IN 1
#define HPS_0_ARM_A9_1_THETA_LOCKED_HAS_OUT 0
#define HPS_0_ARM_A9_1_THETA_LOCKED_HAS_TRI 0
#define HPS_0_ARM_A9_1_THETA_LOCKED_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_THETA_LOCKED_RESET_VALUE 0

/*
 * Macros for device 'phi_pll_reconfig', class 'altera_pll_reconfig'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_PHI_PLL_RECONFIG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_PHI_PLL_RECONFIG_COMPONENT_TYPE altera_pll_reconfig
#define HPS_0_ARM_A9_1_PHI_PLL_RECONFIG_COMPONENT_NAME phi_pll_reconfig
#define HPS_0_ARM_A9_1_PHI_PLL_RECONFIG_BASE 0xc1000400
#define HPS_0_ARM_A9_1_PHI_PLL_RECONFIG_SPAN 256
#define HPS_0_ARM_A9_1_PHI_PLL_RECONFIG_END 0xc10004ff

/*
 * Macros for device 'phi_pll_reset_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_PHI_PLL_RESET_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_PHI_PLL_RESET_PIO_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_PHI_PLL_RESET_PIO_COMPONENT_NAME phi_pll_reset_pio
#define HPS_0_ARM_A9_1_PHI_PLL_RESET_PIO_BASE 0xc1000500
#define HPS_0_ARM_A9_1_PHI_PLL_RESET_PIO_SPAN 16
#define HPS_0_ARM_A9_1_PHI_PLL_RESET_PIO_END 0xc100050f
#define HPS_0_ARM_A9_1_PHI_PLL_RESET_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_PHI_PLL_RESET_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_PHI_PLL_RESET_PIO_CAPTURE 0
#define HPS_0_ARM_A9_1_PHI_PLL_RESET_PIO_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_PHI_PLL_RESET_PIO_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_PHI_PLL_RESET_PIO_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_PHI_PLL_RESET_PIO_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_PHI_PLL_RESET_PIO_FREQ 100000000
#define HPS_0_ARM_A9_1_PHI_PLL_RESET_PIO_HAS_IN 0
#define HPS_0_ARM_A9_1_PHI_PLL_RESET_PIO_HAS_OUT 1
#define HPS_0_ARM_A9_1_PHI_PLL_RESET_PIO_HAS_TRI 0
#define HPS_0_ARM_A9_1_PHI_PLL_RESET_PIO_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_PHI_PLL_RESET_PIO_RESET_VALUE 0

/*
 * Macros for device 'phi_locked', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_PHI_LOCKED_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_PHI_LOCKED_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_PHI_LOCKED_COMPONENT_NAME phi_locked
#define HPS_0_ARM_A9_1_PHI_LOCKED_BASE 0xc1000600
#define HPS_0_ARM_A9_1_PHI_LOCKED_SPAN 16
#define HPS_0_ARM_A9_1_PHI_LOCKED_END 0xc100060f
#define HPS_0_ARM_A9_1_PHI_LOCKED_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_PHI_LOCKED_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_PHI_LOCKED_CAPTURE 0
#define HPS_0_ARM_A9_1_PHI_LOCKED_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_PHI_LOCKED_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_PHI_LOCKED_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_PHI_LOCKED_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_PHI_LOCKED_FREQ 100000000
#define HPS_0_ARM_A9_1_PHI_LOCKED_HAS_IN 1
#define HPS_0_ARM_A9_1_PHI_LOCKED_HAS_OUT 0
#define HPS_0_ARM_A9_1_PHI_LOCKED_HAS_TRI 0
#define HPS_0_ARM_A9_1_PHI_LOCKED_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_PHI_LOCKED_RESET_VALUE 0

/*
 * Macros for device 'tdc_reset_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_TDC_RESET_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_TDC_RESET_PIO_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_TDC_RESET_PIO_COMPONENT_NAME tdc_reset_pio
#define HPS_0_ARM_A9_1_TDC_RESET_PIO_BASE 0xc1000800
#define HPS_0_ARM_A9_1_TDC_RESET_PIO_SPAN 16
#define HPS_0_ARM_A9_1_TDC_RESET_PIO_END 0xc100080f
#define HPS_0_ARM_A9_1_TDC_RESET_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_TDC_RESET_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_TDC_RESET_PIO_CAPTURE 0
#define HPS_0_ARM_A9_1_TDC_RESET_PIO_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_TDC_RESET_PIO_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_TDC_RESET_PIO_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_TDC_RESET_PIO_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_TDC_RESET_PIO_FREQ 100000000
#define HPS_0_ARM_A9_1_TDC_RESET_PIO_HAS_IN 0
#define HPS_0_ARM_A9_1_TDC_RESET_PIO_HAS_OUT 1
#define HPS_0_ARM_A9_1_TDC_RESET_PIO_HAS_TRI 0
#define HPS_0_ARM_A9_1_TDC_RESET_PIO_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_TDC_RESET_PIO_RESET_VALUE 0

/*
 * Macros for device 'ip_sync', class 'ip_sync'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_IP_SYNC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_IP_SYNC_COMPONENT_TYPE ip_sync
#define HPS_0_ARM_A9_1_IP_SYNC_COMPONENT_NAME ip_sync
#define HPS_0_ARM_A9_1_IP_SYNC_BASE 0xc1000c00
#define HPS_0_ARM_A9_1_IP_SYNC_SPAN 1024
#define HPS_0_ARM_A9_1_IP_SYNC_END 0xc1000fff

/*
 * Macros for device 'pulsegenerator', class 'pulse_generator'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_PULSEGENERATOR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_PULSEGENERATOR_COMPONENT_TYPE pulse_generator
#define HPS_0_ARM_A9_1_PULSEGENERATOR_COMPONENT_NAME pulsegenerator
#define HPS_0_ARM_A9_1_PULSEGENERATOR_BASE 0xc1001000
#define HPS_0_ARM_A9_1_PULSEGENERATOR_SPAN 16
#define HPS_0_ARM_A9_1_PULSEGENERATOR_END 0xc100100f

/*
 * Macros for device 'aes_reset_pio', class 'altera_avalon_pio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_AES_RESET_PIO_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_AES_RESET_PIO_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_ARM_A9_1_AES_RESET_PIO_COMPONENT_NAME aes_reset_pio
#define HPS_0_ARM_A9_1_AES_RESET_PIO_BASE 0xc1002000
#define HPS_0_ARM_A9_1_AES_RESET_PIO_SPAN 16
#define HPS_0_ARM_A9_1_AES_RESET_PIO_END 0xc100200f
#define HPS_0_ARM_A9_1_AES_RESET_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_ARM_A9_1_AES_RESET_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_ARM_A9_1_AES_RESET_PIO_CAPTURE 0
#define HPS_0_ARM_A9_1_AES_RESET_PIO_DATA_WIDTH 32
#define HPS_0_ARM_A9_1_AES_RESET_PIO_DO_TEST_BENCH_WIRING 0
#define HPS_0_ARM_A9_1_AES_RESET_PIO_DRIVEN_SIM_VALUE 0
#define HPS_0_ARM_A9_1_AES_RESET_PIO_EDGE_TYPE NONE
#define HPS_0_ARM_A9_1_AES_RESET_PIO_FREQ 100000000
#define HPS_0_ARM_A9_1_AES_RESET_PIO_HAS_IN 0
#define HPS_0_ARM_A9_1_AES_RESET_PIO_HAS_OUT 1
#define HPS_0_ARM_A9_1_AES_RESET_PIO_HAS_TRI 0
#define HPS_0_ARM_A9_1_AES_RESET_PIO_IRQ_TYPE NONE
#define HPS_0_ARM_A9_1_AES_RESET_PIO_RESET_VALUE 0

/*
 * Macros for device 'DMA_to_SDRAM_csr', class 'altera_msgdma'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_DMA_TO_SDRAM_CSR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_CSR_COMPONENT_TYPE altera_msgdma
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_CSR_COMPONENT_NAME DMA_to_SDRAM
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_CSR_BASE 0xff200040
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_CSR_SPAN 32
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_CSR_END 0xff20005f
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_CSR_BURST_ENABLE 1
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_CSR_BURST_WRAPPING_SUPPORT 1
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_CSR_CHANNEL_ENABLE 0
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_CSR_CHANNEL_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_CSR_CHANNEL_WIDTH 8
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_CSR_DATA_FIFO_DEPTH 2048
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_CSR_DATA_WIDTH 256
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_CSR_DESCRIPTOR_FIFO_DEPTH 32
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_CSR_DMA_MODE 2
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_CSR_ENHANCED_FEATURES 0
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_CSR_ERROR_ENABLE 0
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_CSR_ERROR_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_CSR_ERROR_WIDTH 8
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_CSR_MAX_BURST_COUNT 8
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_CSR_MAX_BYTE 65536
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_CSR_MAX_STRIDE 1
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_CSR_PACKET_ENABLE 0
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_CSR_PACKET_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_CSR_PREFETCHER_ENABLE 0
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_CSR_PROGRAMMABLE_BURST_ENABLE 0
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_CSR_RESPONSE_PORT 2
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_CSR_STRIDE_ENABLE 0
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_CSR_STRIDE_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_CSR_TRANSFER_TYPE Full Word Accesses Only

/*
 * Macros for device 'DMA_to_SDRAM_descriptor_slave', class 'altera_msgdma'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_COMPONENT_TYPE altera_msgdma
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_COMPONENT_NAME DMA_to_SDRAM
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_BASE 0xff200060
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_SPAN 16
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_END 0xff20006f
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_BURST_ENABLE 1
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_BURST_WRAPPING_SUPPORT 1
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_CHANNEL_ENABLE 0
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_CHANNEL_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_CHANNEL_WIDTH 8
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_DATA_FIFO_DEPTH 2048
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_DATA_WIDTH 256
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_DESCRIPTOR_FIFO_DEPTH 32
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_DMA_MODE 2
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_ENHANCED_FEATURES 0
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_ERROR_ENABLE 0
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_ERROR_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_ERROR_WIDTH 8
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_MAX_BURST_COUNT 8
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_MAX_BYTE 65536
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_MAX_STRIDE 1
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_PACKET_ENABLE 0
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_PACKET_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_PREFETCHER_ENABLE 0
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_PROGRAMMABLE_BURST_ENABLE 0
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_RESPONSE_PORT 2
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_STRIDE_ENABLE 0
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_STRIDE_ENABLE_DERIVED 0
#define HPS_0_ARM_A9_1_DMA_TO_SDRAM_DESCRIPTOR_SLAVE_TRANSFER_TYPE Full Word Accesses Only

/*
 * Macros for device 'hps_0_gmac0', class 'stmmac'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_GMAC0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_GMAC0_COMPONENT_TYPE stmmac
#define HPS_0_ARM_A9_1_HPS_0_GMAC0_COMPONENT_NAME hps_0_gmac0
#define HPS_0_ARM_A9_1_HPS_0_GMAC0_BASE 0xff700000
#define HPS_0_ARM_A9_1_HPS_0_GMAC0_SPAN 8192
#define HPS_0_ARM_A9_1_HPS_0_GMAC0_END 0xff701fff

/*
 * Macros for device 'hps_0_gmac1', class 'stmmac'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_GMAC1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_GMAC1_COMPONENT_TYPE stmmac
#define HPS_0_ARM_A9_1_HPS_0_GMAC1_COMPONENT_NAME hps_0_gmac1
#define HPS_0_ARM_A9_1_HPS_0_GMAC1_BASE 0xff702000
#define HPS_0_ARM_A9_1_HPS_0_GMAC1_SPAN 8192
#define HPS_0_ARM_A9_1_HPS_0_GMAC1_END 0xff703fff

/*
 * Macros for device 'hps_0_sdmmc', class 'sdmmc'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SDMMC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SDMMC_COMPONENT_TYPE sdmmc
#define HPS_0_ARM_A9_1_HPS_0_SDMMC_COMPONENT_NAME hps_0_sdmmc
#define HPS_0_ARM_A9_1_HPS_0_SDMMC_BASE 0xff704000
#define HPS_0_ARM_A9_1_HPS_0_SDMMC_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_SDMMC_END 0xff704fff

/*
 * Macros for device 'hps_0_qspi', class 'cadence_qspi'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_QSPI_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_QSPI_COMPONENT_TYPE cadence_qspi
#define HPS_0_ARM_A9_1_HPS_0_QSPI_COMPONENT_NAME hps_0_qspi
#define HPS_0_ARM_A9_1_HPS_0_QSPI_BASE 0xff705000
#define HPS_0_ARM_A9_1_HPS_0_QSPI_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_QSPI_END 0xff7050ff

/*
 * Macros for device 'hps_0_fpgamgr', class 'altera_fpgamgr'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_FPGAMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_FPGAMGR_COMPONENT_TYPE altera_fpgamgr
#define HPS_0_ARM_A9_1_HPS_0_FPGAMGR_COMPONENT_NAME hps_0_fpgamgr
#define HPS_0_ARM_A9_1_HPS_0_FPGAMGR_BASE 0xff706000
#define HPS_0_ARM_A9_1_HPS_0_FPGAMGR_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'hps_0_gpio0', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_GPIO0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_GPIO0_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_1_HPS_0_GPIO0_COMPONENT_NAME hps_0_gpio0
#define HPS_0_ARM_A9_1_HPS_0_GPIO0_BASE 0xff708000
#define HPS_0_ARM_A9_1_HPS_0_GPIO0_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_GPIO0_END 0xff7080ff

/*
 * Macros for device 'hps_0_gpio1', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_GPIO1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_GPIO1_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_1_HPS_0_GPIO1_COMPONENT_NAME hps_0_gpio1
#define HPS_0_ARM_A9_1_HPS_0_GPIO1_BASE 0xff709000
#define HPS_0_ARM_A9_1_HPS_0_GPIO1_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_GPIO1_END 0xff7090ff

/*
 * Macros for device 'hps_0_gpio2', class 'dw_gpio'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_GPIO2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_GPIO2_COMPONENT_TYPE dw_gpio
#define HPS_0_ARM_A9_1_HPS_0_GPIO2_COMPONENT_NAME hps_0_gpio2
#define HPS_0_ARM_A9_1_HPS_0_GPIO2_BASE 0xff70a000
#define HPS_0_ARM_A9_1_HPS_0_GPIO2_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_GPIO2_END 0xff70a0ff

/*
 * Macros for device 'hps_0_l3regs', class 'altera_l3regs'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_L3REGS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_L3REGS_COMPONENT_TYPE altera_l3regs
#define HPS_0_ARM_A9_1_HPS_0_L3REGS_COMPONENT_NAME hps_0_l3regs
#define HPS_0_ARM_A9_1_HPS_0_L3REGS_BASE 0xff800000
#define HPS_0_ARM_A9_1_HPS_0_L3REGS_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_L3REGS_END 0xff800fff

/*
 * Macros for device 'hps_0_nand0', class 'denali_nand'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_NAND0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_NAND0_COMPONENT_TYPE denali_nand
#define HPS_0_ARM_A9_1_HPS_0_NAND0_COMPONENT_NAME hps_0_nand0
#define HPS_0_ARM_A9_1_HPS_0_NAND0_BASE 0xff900000
#define HPS_0_ARM_A9_1_HPS_0_NAND0_SPAN 65536
#define HPS_0_ARM_A9_1_HPS_0_NAND0_END 0xff90ffff

/*
 * Macros for device 'hps_0_usb0', class 'usb'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_USB0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_USB0_COMPONENT_TYPE usb
#define HPS_0_ARM_A9_1_HPS_0_USB0_COMPONENT_NAME hps_0_usb0
#define HPS_0_ARM_A9_1_HPS_0_USB0_BASE 0xffb00000
#define HPS_0_ARM_A9_1_HPS_0_USB0_SPAN 262144
#define HPS_0_ARM_A9_1_HPS_0_USB0_END 0xffb3ffff

/*
 * Macros for device 'hps_0_usb1', class 'usb'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_USB1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_USB1_COMPONENT_TYPE usb
#define HPS_0_ARM_A9_1_HPS_0_USB1_COMPONENT_NAME hps_0_usb1
#define HPS_0_ARM_A9_1_HPS_0_USB1_BASE 0xffb40000
#define HPS_0_ARM_A9_1_HPS_0_USB1_SPAN 262144
#define HPS_0_ARM_A9_1_HPS_0_USB1_END 0xffb7ffff

/*
 * Macros for device 'hps_0_dcan0', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_DCAN0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_DCAN0_COMPONENT_TYPE bosch_dcan
#define HPS_0_ARM_A9_1_HPS_0_DCAN0_COMPONENT_NAME hps_0_dcan0
#define HPS_0_ARM_A9_1_HPS_0_DCAN0_BASE 0xffc00000
#define HPS_0_ARM_A9_1_HPS_0_DCAN0_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_DCAN0_END 0xffc00fff

/*
 * Macros for device 'hps_0_dcan1', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_DCAN1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_DCAN1_COMPONENT_TYPE bosch_dcan
#define HPS_0_ARM_A9_1_HPS_0_DCAN1_COMPONENT_NAME hps_0_dcan1
#define HPS_0_ARM_A9_1_HPS_0_DCAN1_BASE 0xffc01000
#define HPS_0_ARM_A9_1_HPS_0_DCAN1_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_DCAN1_END 0xffc01fff

/*
 * Macros for device 'hps_0_uart0', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_UART0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_UART0_COMPONENT_TYPE snps_uart
#define HPS_0_ARM_A9_1_HPS_0_UART0_COMPONENT_NAME hps_0_uart0
#define HPS_0_ARM_A9_1_HPS_0_UART0_BASE 0xffc02000
#define HPS_0_ARM_A9_1_HPS_0_UART0_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_UART0_END 0xffc020ff
#define HPS_0_ARM_A9_1_HPS_0_UART0_FIFO_DEPTH 128
#define HPS_0_ARM_A9_1_HPS_0_UART0_FIFO_HWFC 0
#define HPS_0_ARM_A9_1_HPS_0_UART0_FIFO_MODE 1
#define HPS_0_ARM_A9_1_HPS_0_UART0_FIFO_SWFC 0
#define HPS_0_ARM_A9_1_HPS_0_UART0_FREQ 100000000

/*
 * Macros for device 'hps_0_uart1', class 'snps_uart'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_UART1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_UART1_COMPONENT_TYPE snps_uart
#define HPS_0_ARM_A9_1_HPS_0_UART1_COMPONENT_NAME hps_0_uart1
#define HPS_0_ARM_A9_1_HPS_0_UART1_BASE 0xffc03000
#define HPS_0_ARM_A9_1_HPS_0_UART1_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_UART1_END 0xffc030ff
#define HPS_0_ARM_A9_1_HPS_0_UART1_FIFO_DEPTH 128
#define HPS_0_ARM_A9_1_HPS_0_UART1_FIFO_HWFC 0
#define HPS_0_ARM_A9_1_HPS_0_UART1_FIFO_MODE 1
#define HPS_0_ARM_A9_1_HPS_0_UART1_FIFO_SWFC 0
#define HPS_0_ARM_A9_1_HPS_0_UART1_FREQ 100000000

/*
 * Macros for device 'hps_0_i2c0', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_I2C0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_I2C0_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_1_HPS_0_I2C0_COMPONENT_NAME hps_0_i2c0
#define HPS_0_ARM_A9_1_HPS_0_I2C0_BASE 0xffc04000
#define HPS_0_ARM_A9_1_HPS_0_I2C0_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_I2C0_END 0xffc040ff

/*
 * Macros for device 'hps_0_i2c1', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_I2C1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_I2C1_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_1_HPS_0_I2C1_COMPONENT_NAME hps_0_i2c1
#define HPS_0_ARM_A9_1_HPS_0_I2C1_BASE 0xffc05000
#define HPS_0_ARM_A9_1_HPS_0_I2C1_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_I2C1_END 0xffc050ff

/*
 * Macros for device 'hps_0_i2c2', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_I2C2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_I2C2_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_1_HPS_0_I2C2_COMPONENT_NAME hps_0_i2c2
#define HPS_0_ARM_A9_1_HPS_0_I2C2_BASE 0xffc06000
#define HPS_0_ARM_A9_1_HPS_0_I2C2_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_I2C2_END 0xffc060ff

/*
 * Macros for device 'hps_0_i2c3', class 'designware_i2c'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_I2C3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_I2C3_COMPONENT_TYPE designware_i2c
#define HPS_0_ARM_A9_1_HPS_0_I2C3_COMPONENT_NAME hps_0_i2c3
#define HPS_0_ARM_A9_1_HPS_0_I2C3_BASE 0xffc07000
#define HPS_0_ARM_A9_1_HPS_0_I2C3_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_I2C3_END 0xffc070ff

/*
 * Macros for device 'hps_0_timer0', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_TIMER0_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_ARM_A9_1_HPS_0_TIMER0_COMPONENT_NAME hps_0_timer0
#define HPS_0_ARM_A9_1_HPS_0_TIMER0_BASE 0xffc08000
#define HPS_0_ARM_A9_1_HPS_0_TIMER0_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_TIMER0_END 0xffc080ff

/*
 * Macros for device 'hps_0_timer1', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_TIMER1_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_0_ARM_A9_1_HPS_0_TIMER1_COMPONENT_NAME hps_0_timer1
#define HPS_0_ARM_A9_1_HPS_0_TIMER1_BASE 0xffc09000
#define HPS_0_ARM_A9_1_HPS_0_TIMER1_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_TIMER1_END 0xffc090ff

/*
 * Macros for device 'hps_0_sdrctl', class 'altera_sdrctl'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SDRCTL_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SDRCTL_COMPONENT_TYPE altera_sdrctl
#define HPS_0_ARM_A9_1_HPS_0_SDRCTL_COMPONENT_NAME hps_0_sdrctl
#define HPS_0_ARM_A9_1_HPS_0_SDRCTL_BASE 0xffc25000
#define HPS_0_ARM_A9_1_HPS_0_SDRCTL_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_SDRCTL_END 0xffc25fff

/*
 * Macros for device 'hps_0_timer2', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_TIMER2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_TIMER2_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_ARM_A9_1_HPS_0_TIMER2_COMPONENT_NAME hps_0_timer2
#define HPS_0_ARM_A9_1_HPS_0_TIMER2_BASE 0xffd00000
#define HPS_0_ARM_A9_1_HPS_0_TIMER2_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_TIMER2_END 0xffd000ff

/*
 * Macros for device 'hps_0_timer3', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_TIMER3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_TIMER3_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_0_ARM_A9_1_HPS_0_TIMER3_COMPONENT_NAME hps_0_timer3
#define HPS_0_ARM_A9_1_HPS_0_TIMER3_BASE 0xffd01000
#define HPS_0_ARM_A9_1_HPS_0_TIMER3_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_TIMER3_END 0xffd010ff

/*
 * Macros for device 'hps_0_wd_timer0', class 'dw_wd_timer'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_WD_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER0_COMPONENT_TYPE dw_wd_timer
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER0_COMPONENT_NAME hps_0_wd_timer0
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER0_BASE 0xffd02000
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER0_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER0_END 0xffd020ff

/*
 * Macros for device 'hps_0_wd_timer1', class 'dw_wd_timer'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_WD_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER1_COMPONENT_TYPE dw_wd_timer
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER1_COMPONENT_NAME hps_0_wd_timer1
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER1_BASE 0xffd03000
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER1_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_WD_TIMER1_END 0xffd030ff

/*
 * Macros for device 'hps_0_clkmgr', class 'asimov_clkmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_CLKMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_CLKMGR_COMPONENT_TYPE asimov_clkmgr
#define HPS_0_ARM_A9_1_HPS_0_CLKMGR_COMPONENT_NAME hps_0_clkmgr
#define HPS_0_ARM_A9_1_HPS_0_CLKMGR_BASE 0xffd04000
#define HPS_0_ARM_A9_1_HPS_0_CLKMGR_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'hps_0_rstmgr', class 'altera_rstmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_RSTMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_RSTMGR_COMPONENT_TYPE altera_rstmgr
#define HPS_0_ARM_A9_1_HPS_0_RSTMGR_COMPONENT_NAME hps_0_rstmgr
#define HPS_0_ARM_A9_1_HPS_0_RSTMGR_BASE 0xffd05000
#define HPS_0_ARM_A9_1_HPS_0_RSTMGR_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_RSTMGR_END 0xffd050ff

/*
 * Macros for device 'hps_0_sysmgr', class 'altera_sysmgr'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SYSMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SYSMGR_COMPONENT_TYPE altera_sysmgr
#define HPS_0_ARM_A9_1_HPS_0_SYSMGR_COMPONENT_NAME hps_0_sysmgr
#define HPS_0_ARM_A9_1_HPS_0_SYSMGR_BASE 0xffd08000
#define HPS_0_ARM_A9_1_HPS_0_SYSMGR_SPAN 1024
#define HPS_0_ARM_A9_1_HPS_0_SYSMGR_END 0xffd083ff

/*
 * Macros for device 'hps_0_dma', class 'arm_pl330_dma'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_DMA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_DMA_COMPONENT_TYPE arm_pl330_dma
#define HPS_0_ARM_A9_1_HPS_0_DMA_COMPONENT_NAME hps_0_dma
#define HPS_0_ARM_A9_1_HPS_0_DMA_BASE 0xffe01000
#define HPS_0_ARM_A9_1_HPS_0_DMA_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_DMA_END 0xffe01fff

/*
 * Macros for device 'hps_0_spim0', class 'spi'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SPIM0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SPIM0_COMPONENT_TYPE spi
#define HPS_0_ARM_A9_1_HPS_0_SPIM0_COMPONENT_NAME hps_0_spim0
#define HPS_0_ARM_A9_1_HPS_0_SPIM0_BASE 0xfff00000
#define HPS_0_ARM_A9_1_HPS_0_SPIM0_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_SPIM0_END 0xfff000ff

/*
 * Macros for device 'hps_0_spim1', class 'spi'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SPIM1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SPIM1_COMPONENT_TYPE spi
#define HPS_0_ARM_A9_1_HPS_0_SPIM1_COMPONENT_NAME hps_0_spim1
#define HPS_0_ARM_A9_1_HPS_0_SPIM1_BASE 0xfff01000
#define HPS_0_ARM_A9_1_HPS_0_SPIM1_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_SPIM1_END 0xfff010ff

/*
 * Macros for device 'hps_0_scu', class 'scu'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_SCU_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_SCU_COMPONENT_TYPE scu
#define HPS_0_ARM_A9_1_HPS_0_SCU_COMPONENT_NAME hps_0_scu
#define HPS_0_ARM_A9_1_HPS_0_SCU_BASE 0xfffec000
#define HPS_0_ARM_A9_1_HPS_0_SCU_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_SCU_END 0xfffec0ff

/*
 * Macros for device 'hps_0_timer', class 'arm_internal_timer'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_TIMER_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_TIMER_COMPONENT_TYPE arm_internal_timer
#define HPS_0_ARM_A9_1_HPS_0_TIMER_COMPONENT_NAME hps_0_timer
#define HPS_0_ARM_A9_1_HPS_0_TIMER_BASE 0xfffec600
#define HPS_0_ARM_A9_1_HPS_0_TIMER_SPAN 256
#define HPS_0_ARM_A9_1_HPS_0_TIMER_END 0xfffec6ff

/*
 * Macros for device 'hps_0_arm_gic_0', class 'arm_gic'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_COMPONENT_NAME hps_0_arm_gic_0
#define HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_BASE 0xfffed000
#define HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'hps_0_L2', class 'arm_pl310_L2'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_L2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_L2_COMPONENT_TYPE arm_pl310_L2
#define HPS_0_ARM_A9_1_HPS_0_L2_COMPONENT_NAME hps_0_L2
#define HPS_0_ARM_A9_1_HPS_0_L2_BASE 0xfffef000
#define HPS_0_ARM_A9_1_HPS_0_L2_SPAN 4096
#define HPS_0_ARM_A9_1_HPS_0_L2_END 0xfffeffff

/*
 * Macros for device 'hps_0_axi_ocram', class 'axi_ocram'
 * Path to the device is from the master group 'hps_0_arm_a9_1'.
 * The macros are prefixed with 'HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_COMPONENT_NAME hps_0_axi_ocram
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_BASE 0xffff0000
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_SPAN 65536
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_END 0xffffffff
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_SIZE_MULTIPLE 1
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_SIZE_VALUE 1<<16
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_WRITABLE 1
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_0_ARM_A9_1_HPS_0_AXI_OCRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16

/*
 * Macros for device 'aes', class 'aes'
 * Path to the device is from the master group 'ip_sync'.
 * The macros are prefixed with 'IP_SYNC_AES_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define IP_SYNC_AES_COMPONENT_TYPE aes
#define IP_SYNC_AES_COMPONENT_NAME aes
#define IP_SYNC_AES_BASE 0x0
#define IP_SYNC_AES_SPAN 1024
#define IP_SYNC_AES_END 0x3ff

/*
 * Macros for device 'ip_sync', class 'ip_sync'
 * Path to the device is from the master group 'ipsync_bridge'.
 * The macros are prefixed with 'IPSYNC_BRIDGE_IP_SYNC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define IPSYNC_BRIDGE_IP_SYNC_COMPONENT_TYPE ip_sync
#define IPSYNC_BRIDGE_IP_SYNC_COMPONENT_NAME ip_sync
#define IPSYNC_BRIDGE_IP_SYNC_BASE 0x0
#define IPSYNC_BRIDGE_IP_SYNC_SPAN 1024
#define IPSYNC_BRIDGE_IP_SYNC_END 0x3ff

/*
 * Macros for device 'aes', class 'aes'
 * Path to the device is from the master group 'ipsync_to_aes_delay'.
 * The macros are prefixed with 'IPSYNC_TO_AES_DELAY_AES_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define IPSYNC_TO_AES_DELAY_AES_COMPONENT_TYPE aes
#define IPSYNC_TO_AES_DELAY_AES_COMPONENT_NAME aes
#define IPSYNC_TO_AES_DELAY_AES_BASE 0x0
#define IPSYNC_TO_AES_DELAY_AES_SPAN 1024
#define IPSYNC_TO_AES_DELAY_AES_END 0x3ff

/*
 * Macros for device 'phi_pll_reconfig', class 'altera_pll_reconfig'
 * Path to the device is from the master group 'phi_pll_reconfig_cdc'.
 * The macros are prefixed with 'PHI_PLL_RECONFIG_CDC_PHI_PLL_RECONFIG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define PHI_PLL_RECONFIG_CDC_PHI_PLL_RECONFIG_COMPONENT_TYPE altera_pll_reconfig
#define PHI_PLL_RECONFIG_CDC_PHI_PLL_RECONFIG_COMPONENT_NAME phi_pll_reconfig
#define PHI_PLL_RECONFIG_CDC_PHI_PLL_RECONFIG_BASE 0x0
#define PHI_PLL_RECONFIG_CDC_PHI_PLL_RECONFIG_SPAN 256
#define PHI_PLL_RECONFIG_CDC_PHI_PLL_RECONFIG_END 0xff

/*
 * Macros for device 'pulsegenerator', class 'pulse_generator'
 * Path to the device is from the master group 'pulsegenerator_cdc'.
 * The macros are prefixed with 'PULSEGENERATOR_CDC_PULSEGENERATOR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define PULSEGENERATOR_CDC_PULSEGENERATOR_COMPONENT_TYPE pulse_generator
#define PULSEGENERATOR_CDC_PULSEGENERATOR_COMPONENT_NAME pulsegenerator
#define PULSEGENERATOR_CDC_PULSEGENERATOR_BASE 0x0
#define PULSEGENERATOR_CDC_PULSEGENERATOR_SPAN 16
#define PULSEGENERATOR_CDC_PULSEGENERATOR_END 0xf

/*
 * Macros for device 'theta_pll_reconfig', class 'altera_pll_reconfig'
 * Path to the device is from the master group 'theta_pll_reconfig_cdc'.
 * The macros are prefixed with 'THETA_PLL_RECONFIG_CDC_THETA_PLL_RECONFIG_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define THETA_PLL_RECONFIG_CDC_THETA_PLL_RECONFIG_COMPONENT_TYPE altera_pll_reconfig
#define THETA_PLL_RECONFIG_CDC_THETA_PLL_RECONFIG_COMPONENT_NAME theta_pll_reconfig
#define THETA_PLL_RECONFIG_CDC_THETA_PLL_RECONFIG_BASE 0x0
#define THETA_PLL_RECONFIG_CDC_THETA_PLL_RECONFIG_SPAN 256
#define THETA_PLL_RECONFIG_CDC_THETA_PLL_RECONFIG_END 0xff


#endif /* _ALTERA_SOC_SYSTEM_H_ */
